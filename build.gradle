plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.4'
	id 'io.spring.dependency-management' version '1.1.0'
}

ext {
	lombokVersion = '1.18.20'
	jjwtVersion = '0.9.1'
	springBootVersion = '3.0.4'
}

group = 'com.shoescms'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation("org.springframework.boot:spring-boot-starter-thymeleaf")
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.springframework.boot:spring-boot-starter-log4j2'

	// database
	runtimeOnly 'com.mysql:mysql-connector-j'
	// https://mvnrepository.com/artifact/org.mariadb.jdbc/mariadb-java-client
	implementation 'org.mariadb.jdbc:mariadb-java-client:3.2.0'

	// https://mvnrepository.com/artifact/org.hibernate.orm/hibernate-jpamodelgen
	annotationProcessor('org.hibernate.orm:hibernate-jpamodelgen:6.3.0.Final')

	// lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	// querydsl
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.4'

	// jwt
	implementation "io.jsonwebtoken:jjwt:${jjwtVersion}"
	implementation 'javax.xml.bind:jaxb-api:2.3.1'

	// message
	implementation 'net.rakugakibox.util:yaml-resource-bundle:1.1'


	// util
	implementation 'commons-io:commons-io:2.11.0'
	implementation 'org.apache.httpcomponents:httpcore:4.4.14'
	implementation 'com.google.code.gson:gson:2.8.9'
	implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1'

	// excel download
	implementation group: 'org.apache.poi', name: 'poi', version: '5.2.3'
	implementation group: 'org.apache.poi', name: 'poi-ooxml', version: '5.2.3'

	annotationProcessor(
			platform("org.springframework.boot:spring-boot-dependencies:${springBootVersion}"),
			"org.projectlombok:lombok:${lombokVersion}"
	)

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	// google
	// https://mvnrepository.com/artifact/com.google.firebase/firebase-admin
	implementation("com.google.firebase:firebase-admin:9.2.0")

	// elasticsearch
//	implementation 'co.elastic.clients:elasticsearch-java:8.9.1'
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.7.1'
	// https://mvnrepository.com/artifact/org.springframework.data/spring-data-elasticsearch
	implementation("org.springframework.data:spring-data-elasticsearch:5.1.3")


}

tasks.named('test') {
	useJUnitPlatform()
}

configurations {
	all {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	}
}

//def generated="$projectDir/src/main/generated"
//
//tasks.withType(JavaCompile) {
//	options.annotationProcessorGeneratedSourcesDirectory = file(generated)
//}
//
//clean.doLast {
//	file(generated).deleteDir()
//}

//sourceSets {
//	main {
//		java {
//			srcDirs = ["$projectDir/src/main/java", "$projectDir/src/main/generated"]
//		}
//	}
//}

